
package com.twitter.server
import akka.actor.Actor
import spray.routing._
import spray.http._
import MediaTypes._
import akka.actor.Props
import akka.event.Logging
import akka.actor.Props



object TweetGetActor {
  case class GetTweet(user: String)
  
  val cpuFactor = 10
  val ipaddr = "192.168.56.1"
}

class TweetGetActor(requestContext: RequestContext) extends Actor {

  import TweetGetActor._

  implicit val system = context.system
  import system.dispatcher
  val log = Logging(system, getClass)

  def receive = {
    case GetTweet(user) =>
      gettweet(user)
      context.stop(self)
  }

  def gettweet(user: String) = { 
    
    println("Getting tweet for " +user + tweet)

     log.info("Getting tweets for user: {}", user)  
     var r = new scala.util.Random
     var seq = r.nextInt(cpuFactor)
     //val TweetSendService = context.actorSelection("akka://TweetEngine/user/Tweetengine/"+seq)
     val TweetSendService = context.actorSelection("akka.tcp://TweetEngine@" + ipaddr + ":2250/user/Tweetengine/"+seq)
     //println(TweetSendService)
     
     TweetSendService ! getUserTweet(user)
     requestContext.complete("Tweet Requested")

    
  }
}
